<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds">

    <contextName>logback</contextName>
    <!-- 定义日志通用属性变量 -->
    <!-- name的值是变量的名称，定义的值会被插入到logger上下文中。定义变量后，可以使“${}”来使用变量。 -->
    <property name="appName" value="logback"/>
    <property name="baseLogPath" value="/app_logs"/>
    <property name="fileLevel" value="debug"/>
    <property name="maxFileSize" value="500MB"/>
    <property name="maxHistory" value="15"/>

    <property name="FILE_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{traceId}] [%thread] %-5level %logger{50} - %msg%n"/>
    <!--输出到控制台-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${fileLevel}</level>
        </filter>
        <encoder>
            <Pattern>${FILE_LOG_PATTERN}</Pattern>
            <!-- 设置字符集 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    <!--输出到文件-->
    <!-- 时间滚动输出 业务逻辑代码中输出的 日志 -->
    <appender name="log_common_appender" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <!-- &lt;!&ndash; 正在记录的日志文件的路径及文件名 &ndash;&gt;-->
        <!-- <file>${baseLogPath}/${appName}/logs/${appName}.log</file>-->
        <!--日志文件输出格式-->
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${baseLogPath}/${appName}/logs/${appName}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${maxFileSize}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <!-- 日志文件记录级别 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${fileLevel}</level>
        </filter>
    </appender>

    <logger name="log_common" additivity="false" level="${fileLevel}">
        <appender-ref ref="log_common_appender"/>
    </logger>

    <!--  需要debug的底层mapper  -->
    <logger name="com.sinolink.trade.stock.model.mapper" level="debug"/>

    <root level="info">
        <appender-ref ref="CONSOLE"/>
        <!--        <appender-ref ref="log_common_appender"/>-->
    </root>

</configuration>
