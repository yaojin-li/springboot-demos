# Linux环境部署，日志存储于：/usr/local/src/logs/
# 共有8个级别，按照从低到高为：ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF。
Configuration:
  status: warn
  # 监控间隔
  monitorInterval: 300

  # 定义全局变量
  Properties:
    Property:
    - name: log.path
      value: /usr/local/src/logs/
    - name: project.name
      value: demo
    - name: log.pattern
      value: "[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%logger{36}.%t:%L] - %msg%n"

  Appenders:
    # 输出到控制台
    Console:
      name: CONSOLE
      target: SYSTEM_OUT
      PatternLayout:
        pattern: ${log.pattern}

    # 启动日志
    RollingFile:
    - name: ALL_FILE
      fileName: ${log.path}/${project.name}.log
      # ' -%i '表示一天产生日志文件的个数
      filePattern: "${log.path}/historyLog/$${date:yyyy-MM}/${project.name}-%d{yyyy-MM-dd}-%i.log.gz"
      PatternLayout:
        pattern: ${log.pattern}
      Filters:
        # 一定要先去除不接受的日志级别，然后获取需要接受的日志级别
        ThresholdFilter:
        - level: fatal
          onMatch: DENY
          onMismatch: NEUTRAL
        - level: debug
          onMatch: ACCEPT
          onMismatch: DENY
      # 策略
      Policies:
        # 基于时间的触发策略（按 1天分）
        TimeBasedTriggeringPolicy:
          modulate: true
          interval: 1
        # 基于文件大小的触发策略（按 100MB分）
        SizeBasedTriggeringPolicy:
          size: "100 MB"
      # 限制最多产生的文件个数
      DefaultRolloverStrategy:
        max: 100

    # 错误日志
    - name: ERROR_FILE
      ignoreExceptions: false
      fileName: ${log.path}/error/${project.name}_error.log
      filePattern: "${log.path}/error/$${date:yyyy-MM}/${project.name}-%d{yyyy-MM-dd}-%i.log.gz"
      Filters:
        # 一定要先去除不接受的日志级别，然后获取需要接受的日志级别
        ThresholdFilter:
        - level: fatal
          onMatch: DENY
          onMismatch: NEUTRAL
        - level: error
          onMatch: ACCEPT
          onMismatch: DENY
      PatternLayout:
        pattern: ${log.pattern}
      Policies:
        TimeBasedTriggeringPolicy:
          modulate: true
          interval: 1
      DefaultRolloverStrategy:
        max: 100

  Loggers:
    Root:
      level: info
      AppenderRef:
      - ref: CONSOLE
      - ref: ALL_FILE
      - ref: ERROR_FILE

    # 对特定路径下的文件输出针对性日志
    # 如下：对mapper中的mapping文件输出SQL debug日志
    Logger:
    - name: com.example.demo.examplemapper
      level: debug
      additivity: true
      AppenderRef:
      - ref: CONSOLE
      - ref: ALL_FILE
      - ref: ERROR_FILE